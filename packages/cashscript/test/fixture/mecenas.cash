contract Mecenas(bytes20 recipient, bytes20 funder, int pledge) {
    function receive(pubkey pk, sig s) {
        require(checkSig(s, pk));

        int fee = 1000;
        bytes8 amount1 = bytes8(int(bytes(tx.value)) - pledge - fee);
        bytes8 amount2 = bytes8(pledge);

        bytes contractBytecode = tx.scriptCode.split(3)[1];

        require(tx.age >= 30 days);
        require(int(tx.version) >= 2);

        // out1 = <amount1> + <23 bytes> + HASH160 <redeem script hash> EQUAL
        // out2 = <amount2> + <25 bytes> + DUP HASH160 <public key hash> EQUALVERIFY CHECKSIG
        bytes out1 = amount1 + 0x17a914 + hash160(contractBytecode) + 0x87;
        bytes out2 = amount2 + 0x1976a914 + recipient + 0x88ac;

        require(hash256(out1 + out2) == tx.hashOutputs);
    }

    function reclaim(pubkey pk, sig s) {
        require(hash160(pk) == funder);
        require(checkSig(s, pk));
    }
}
