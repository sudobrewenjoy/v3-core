# This file includes several examples CashScript contracts as compiled with 0.1.2 and 0.2.0
# to verify their equivalence. These Scripts contain the exact output as compiled by Cashc,
# ecxept for the following changes:
#  * "Default case" has been added to the 0.1.2 bytecode, as this was a vuln. fix in 0.2.0
#    but we are only interested in the optimisation equivalence, so we simulate this fix for 0.1.2
#  * Final OP_1/0 has been changed to OP_TRUE/FALSE to play nice with CashProof type checking
#  * Raw data has been prepended with 0x or changed to integer representation
#    (CashScript hex-encodes numbers, CashProof expects decimal numbers,
#     and assumes hex-encoded data is of the raw bytes type).

!full_script=True;

# P2PKH
# 12 opcount, 17 bytes
OP_1 OP_PICK OP_HASH160 OP_1 OP_PICK OP_EQUAL OP_VERIFY OP_2 OP_PICK OP_2 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_TRUE
<=>
# 4 opcount, 4 bytes
OP_OVER OP_HASH160 OP_EQUALVERIFY OP_CHECKSIG
# optimisation: opcount ~67%, bytes ~76%
;

# TransferWithTimeout
# 31 opcount, 43 bytes
OP_3 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_4 OP_PICK OP_2 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_3 OP_PICK OP_1 OP_NUMEQUAL OP_IF OP_4 OP_PICK OP_1 OP_PICK OP_CHECKSIG OP_VERIFY OP_2 OP_PICK OP_CHECKLOCKTIMEVERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF
<=>
# 23 opcount, 31 bytes
OP_3 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_4 OP_ROLL OP_ROT OP_CHECKSIG OP_NIP OP_NIP OP_NIP OP_ELSE OP_3 OP_ROLL OP_1 OP_NUMEQUAL OP_IF OP_3 OP_ROLL OP_SWAP OP_CHECKSIGVERIFY OP_SWAP OP_CHECKLOCKTIMEVERIFY OP_DROP OP_TRUE OP_NIP OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF
# optimisation: opcount ~26%, bytes ~28%
;

# HodlVault
# 37 opcount, 52 bytes
OP_6 OP_PICK OP_4 OP_SPLIT OP_DROP OP_BIN2NUM OP_7 OP_PICK OP_4 OP_SPLIT OP_NIP OP_BIN2NUM OP_1 OP_PICK OP_5 OP_PICK OP_GREATERTHANOREQUAL OP_VERIFY OP_1 OP_PICK OP_CHECKLOCKTIMEVERIFY OP_DROP OP_0 OP_PICK OP_6 OP_PICK OP_GREATERTHANOREQUAL OP_VERIFY OP_7 OP_PICK OP_9 OP_PICK OP_5 OP_PICK OP_CHECKDATASIG OP_VERIFY OP_6 OP_PICK OP_3 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE
<=>
# 23 opcount, 32 bytes
OP_6 OP_PICK OP_4 OP_SPLIT OP_DROP OP_BIN2NUM OP_7 OP_PICK OP_4 OP_SPLIT OP_NIP OP_BIN2NUM OP_OVER OP_5 OP_ROLL OP_GREATERTHANOREQUAL OP_VERIFY OP_SWAP OP_CHECKLOCKTIMEVERIFY OP_DROP OP_3 OP_ROLL OP_GREATERTHANOREQUAL OP_VERIFY OP_3 OP_ROLL OP_4 OP_ROLL OP_3 OP_ROLL OP_CHECKDATASIGVERIFY OP_CHECKSIG
# optimisation: opcount ~38%, bytes ~38%
;

# # Doesn't work yet -- CashProof doesn't fully support CMS yet
# # 2 of 3 Multisig
# # 12 opcount, 21 bytes
# OP_0 OP_3 OP_PICK OP_5 OP_PICK OP_2 OP_3 OP_PICK OP_5 OP_PICK OP_7 OP_PICK OP_3 OP_CHECKMULTISIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE
# <=>
# # 6 opcount, 12 bytes
# OP_0 OP_3 OP_ROLL OP_4 OP_ROLL OP_2 OP_3 OP_ROLL OP_2ROT OP_SWAP OP_3 OP_CHECKMULTISIG
# optimisation: opcount 50%, bytes ~43%
# ;

# # Does prove, but this is very slow, so it's commented out
# # Zero-conf forfeits
# # 60 opcount, 83 bytes
# OP_2 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_3 OP_PICK OP_HASH160 OP_2 OP_PICK OP_EQUAL OP_VERIFY OP_4 OP_PICK OP_4 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_2 OP_PICK OP_1 OP_NUMEQUAL OP_IF OP_7 OP_PICK OP_HASH160 OP_1 OP_PICK OP_EQUAL OP_VERIFY OP_4 OP_PICK OP_7 OP_PICK OP_EQUAL OP_NOT OP_VERIFY OP_3 OP_PICK OP_SIZE OP_1 OP_SUB OP_SPLIT OP_DROP OP_5 OP_PICK OP_9 OP_PICK OP_CHECKDATASIG OP_VERIFY OP_5 OP_PICK OP_SIZE OP_1 OP_SUB OP_SPLIT OP_DROP OP_7 OP_PICK OP_9 OP_PICK OP_CHECKDATASIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF
# <=>
# # 43 opcount, 52 bytes
# OP_2 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_3 OP_PICK OP_HASH160 OP_ROT OP_EQUALVERIFY OP_2SWAP OP_CHECKSIG OP_NIP OP_NIP OP_ELSE OP_ROT OP_1 OP_NUMEQUAL OP_IF OP_6 OP_PICK OP_HASH160 OP_EQUALVERIFY OP_2 OP_PICK OP_5 OP_PICK OP_EQUAL OP_NOT OP_VERIFY OP_SWAP OP_SIZE OP_1SUB OP_SPLIT OP_DROP OP_ROT OP_5 OP_PICK OP_CHECKDATASIGVERIFY OP_SWAP OP_SIZE OP_1SUB OP_SPLIT OP_DROP OP_2SWAP OP_SWAP OP_CHECKDATASIG OP_NIP OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF
# optimisation: opcount ~28%, bytes ~37%
# ;

# HTLC
# 39 opcount, 53 bytes
OP_4 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_5 OP_PICK OP_SHA256 OP_4 OP_PICK OP_EQUAL OP_VERIFY OP_6 OP_PICK OP_2 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_4 OP_PICK OP_1 OP_NUMEQUAL OP_IF OP_2 OP_PICK OP_CHECKLOCKTIMEVERIFY OP_DROP OP_5 OP_PICK OP_1 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF
<=>
# 28 opcount, 37 bytes
OP_4 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_5 OP_ROLL OP_SHA256 OP_4 OP_ROLL OP_EQUALVERIFY OP_4 OP_ROLL OP_ROT OP_CHECKSIG OP_NIP OP_NIP OP_NIP OP_ELSE OP_4 OP_ROLL OP_1 OP_NUMEQUAL OP_IF OP_ROT OP_CHECKLOCKTIMEVERIFY OP_DROP OP_3 OP_ROLL OP_SWAP OP_CHECKSIG OP_NIP OP_NIP OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF
# optimisation: opcount ~28%, bytes ~30%
;

# Local.bitcoin.com
# 86 opcount, 128 bytes
OP_0 OP_8 OP_NUM2BIN OP_0 OP_8 OP_NUM2BIN OP_10 OP_PICK OP_1 OP_NUMEQUAL OP_IF OP_3 OP_PICK OP_2 OP_ROLL OP_DROP OP_SWAP OP_2 OP_PICK OP_1 OP_ROLL OP_DROP OP_ELSE OP_10 OP_PICK OP_2 OP_NUMEQUAL OP_IF OP_3 OP_PICK OP_2 OP_ROLL OP_DROP OP_SWAP OP_4 OP_PICK OP_1 OP_ROLL OP_DROP OP_ELSE OP_10 OP_PICK OP_3 OP_NUMEQUAL OP_IF OP_2 OP_PICK OP_2 OP_ROLL OP_DROP OP_SWAP OP_3 OP_PICK OP_1 OP_ROLL OP_DROP OP_ELSE OP_10 OP_PICK OP_4 OP_NUMEQUAL OP_IF OP_2 OP_PICK OP_2 OP_ROLL OP_DROP OP_SWAP OP_4 OP_PICK OP_1 OP_ROLL OP_DROP OP_ELSE OP_FALSE OP_VERIFY OP_ENDIF OP_ENDIF OP_ENDIF OP_ENDIF OP_9 OP_PICK OP_HASH160 OP_1 OP_PICK OP_EQUAL OP_VERIFY OP_7 OP_PICK OP_HASH160 OP_2 OP_PICK OP_EQUAL OP_VERIFY OP_5 OP_PICK OP_11 OP_PICK OP_8 OP_NUM2BIN OP_CAT OP_9 OP_PICK OP_1 OP_PICK OP_12 OP_PICK OP_CHECKDATASIG OP_VERIFY OP_7 OP_PICK OP_9 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE
<=>
# 60 opcount, 86 bytes
OP_0 OP_8 OP_NUM2BIN OP_0 OP_8 OP_NUM2BIN OP_10 OP_PICK OP_1 OP_NUMEQUAL OP_IF OP_2DROP OP_2DUP OP_ELSE OP_10 OP_PICK OP_2 OP_NUMEQUAL OP_IF OP_NIP OP_2 OP_PICK OP_SWAP OP_4 OP_PICK OP_NIP OP_ELSE OP_10 OP_PICK OP_3 OP_NUMEQUAL OP_IF OP_NIP OP_OVER OP_SWAP OP_3 OP_PICK OP_NIP OP_ELSE OP_10 OP_PICK OP_4 OP_NUMEQUAL OP_IF OP_NIP OP_OVER OP_SWAP OP_4 OP_PICK OP_NIP OP_ELSE OP_FALSE OP_VERIFY OP_ENDIF OP_ENDIF OP_ENDIF OP_ENDIF OP_9 OP_PICK OP_HASH160 OP_EQUALVERIFY OP_6 OP_PICK OP_HASH160 OP_EQUALVERIFY OP_3 OP_ROLL OP_8 OP_ROLL OP_8 OP_NUM2BIN OP_CAT OP_6 OP_ROLL OP_SWAP OP_7 OP_ROLL OP_CHECKDATASIGVERIFY OP_3 OP_ROLL OP_4 OP_ROLL OP_CHECKSIG OP_NIP OP_NIP OP_NIP
# optimisation: opcount ~33%, bytes ~33%
;

# Last Will
# 139 opcount, 207 bytes
OP_3 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_4 OP_PICK OP_SHA256 OP_RIPEMD160 OP_1 OP_PICK OP_EQUAL OP_VERIFY OP_5 OP_PICK OP_5 OP_PICK OP_CHECKSIG OP_VERIFY OP_6 OP_PICK OP_8 OP_PICK OP_CAT OP_9 OP_PICK OP_CAT OP_10 OP_PICK OP_CAT OP_11 OP_PICK OP_CAT OP_12 OP_PICK OP_CAT OP_13 OP_PICK OP_CAT OP_6 OP_PICK OP_SIZE OP_1 OP_SUB OP_SPLIT OP_DROP OP_1 OP_PICK OP_SHA256 OP_7 OP_PICK OP_CHECKDATASIG OP_VERIFY 1000 OP_11 OP_PICK OP_BIN2NUM OP_1 OP_PICK OP_SUB OP_8 OP_NUM2BIN 0x87 0xa9 0x14 0x17 OP_15 OP_PICK OP_1 OP_SPLIT OP_NIP 436800 OP_CHECKSEQUENCEVERIFY OP_DROP OP_14 OP_PICK OP_BIN2NUM OP_2 OP_GREATERTHANOREQUAL OP_VERIFY OP_5 OP_PICK OP_2 OP_PICK OP_CAT OP_4 OP_PICK OP_CAT OP_3 OP_PICK OP_CAT OP_1 OP_PICK OP_HASH160 OP_CAT OP_5 OP_PICK OP_CAT OP_HASH256 20 OP_PICK OP_EQUAL OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_3 OP_PICK OP_1 OP_NUMEQUAL OP_IF OP_4 OP_PICK OP_HASH160 OP_2 OP_PICK OP_EQUAL OP_VERIFY OP_5 OP_PICK OP_5 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_3 OP_PICK OP_2 OP_NUMEQUAL OP_IF 15552000 OP_CHECKSEQUENCEVERIFY OP_DROP OP_4 OP_PICK OP_HASH160 OP_3 OP_PICK OP_EQUAL OP_VERIFY OP_5 OP_PICK OP_5 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF OP_ENDIF
<=>
# 102 opcount, 155 bytes
OP_3 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_4 OP_PICK OP_HASH160 OP_EQUALVERIFY OP_4 OP_PICK OP_4 OP_PICK OP_CHECKSIGVERIFY OP_5 OP_PICK OP_7 OP_ROLL OP_CAT OP_7 OP_PICK OP_CAT OP_8 OP_PICK OP_CAT OP_9 OP_ROLL OP_CAT OP_9 OP_PICK OP_CAT OP_10 OP_ROLL OP_CAT OP_5 OP_ROLL OP_SIZE OP_1SUB OP_SPLIT OP_DROP OP_SWAP OP_SHA256 OP_5 OP_ROLL OP_CHECKDATASIGVERIFY 1000 OP_6 OP_ROLL OP_BIN2NUM OP_SWAP OP_SUB OP_8 OP_NUM2BIN 0x87 0xa9 0x14 0x17 OP_9 OP_ROLL OP_1 OP_SPLIT OP_NIP 436800 OP_CHECKSEQUENCEVERIFY OP_DROP OP_9 OP_ROLL OP_BIN2NUM OP_2 OP_GREATERTHANOREQUAL OP_VERIFY OP_5 OP_ROLL OP_ROT OP_CAT OP_3 OP_ROLL OP_CAT OP_ROT OP_CAT OP_SWAP OP_HASH160 OP_CAT OP_SWAP OP_CAT OP_HASH256 OP_4 OP_ROLL OP_EQUAL OP_NIP OP_NIP OP_NIP OP_ELSE OP_3 OP_PICK OP_1 OP_NUMEQUAL OP_IF OP_4 OP_PICK OP_HASH160 OP_ROT OP_EQUALVERIFY OP_4 OP_ROLL OP_4 OP_ROLL OP_CHECKSIG OP_NIP OP_NIP OP_NIP OP_ELSE OP_3 OP_ROLL OP_2 OP_NUMEQUAL OP_IF 15552000 OP_CHECKSEQUENCEVERIFY OP_DROP OP_3 OP_PICK OP_HASH160 OP_3 OP_ROLL OP_EQUALVERIFY OP_2SWAP OP_CHECKSIG OP_NIP OP_NIP OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF OP_ENDIF
# optimisation: opcount ~27%, bytes ~25%
;

# Mecenas
# 177 opcount, 260 bytes
OP_3 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_6 OP_PICK OP_SIZE OP_NIP OP_4 OP_NUMEQUAL OP_VERIFY OP_7 OP_PICK OP_SIZE OP_NIP 100 OP_NUMEQUAL OP_VERIFY OP_9 OP_PICK OP_SIZE OP_NIP OP_8 OP_NUMEQUAL OP_VERIFY OP_10 OP_PICK OP_SIZE OP_NIP OP_4 OP_NUMEQUAL OP_VERIFY OP_10 OP_PICK OP_SIZE OP_NIP 32 OP_NUMEQUAL OP_VERIFY OP_12 OP_PICK OP_SIZE OP_NIP OP_8 OP_NUMEQUAL OP_VERIFY OP_5 OP_PICK OP_5 OP_PICK OP_CHECKSIG OP_VERIFY OP_6 OP_PICK OP_8 OP_PICK OP_CAT OP_9 OP_PICK OP_CAT OP_10 OP_PICK OP_CAT OP_11 OP_PICK OP_CAT OP_12 OP_PICK OP_CAT OP_13 OP_PICK OP_CAT OP_6 OP_PICK OP_SIZE OP_1 OP_SUB OP_SPLIT OP_DROP OP_1 OP_PICK OP_SHA256 OP_7 OP_PICK OP_CHECKDATASIG OP_VERIFY 1000 OP_4 OP_PICK OP_8 OP_NUM2BIN OP_12 OP_PICK OP_BIN2NUM OP_6 OP_PICK OP_SUB OP_2 OP_PICK OP_SUB OP_8 OP_NUM2BIN 0x76 0x87 0xa9 0x14 0x17 0x19 0x88 0xac 20 OP_PICK OP_3 OP_SPLIT OP_NIP 2700000 OP_CHECKSEQUENCEVERIFY OP_DROP 19 OP_PICK OP_BIN2NUM OP_2 OP_GREATERTHANOREQUAL OP_VERIFY OP_9 OP_PICK OP_5 OP_PICK OP_CAT OP_7 OP_PICK OP_CAT OP_6 OP_PICK OP_CAT OP_1 OP_PICK OP_HASH160 OP_CAT OP_8 OP_PICK OP_CAT OP_11 OP_PICK OP_5 OP_PICK OP_CAT OP_10 OP_PICK OP_CAT OP_8 OP_PICK OP_CAT OP_7 OP_PICK OP_CAT OP_15 OP_PICK OP_CAT OP_4 OP_PICK OP_CAT OP_3 OP_PICK OP_CAT OP_1 OP_PICK OP_1 OP_PICK OP_CAT OP_HASH256 27 OP_PICK OP_SHA256 OP_EQUAL OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_3 OP_PICK OP_1 OP_NUMEQUAL OP_IF OP_4 OP_PICK OP_HASH160 OP_2 OP_PICK OP_EQUAL OP_VERIFY OP_5 OP_PICK OP_5 OP_PICK OP_CHECKSIG OP_VERIFY OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_DROP OP_TRUE OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF
<=>
# 131 opcount, 207 bytes
OP_3 OP_PICK OP_0 OP_NUMEQUAL OP_IF OP_6 OP_PICK OP_SIZE OP_NIP OP_4 OP_NUMEQUALVERIFY OP_7 OP_PICK OP_SIZE OP_NIP 100 OP_NUMEQUALVERIFY OP_9 OP_PICK OP_SIZE OP_NIP OP_8 OP_NUMEQUALVERIFY OP_10 OP_PICK OP_SIZE OP_NIP OP_4 OP_NUMEQUALVERIFY OP_10 OP_PICK OP_SIZE OP_NIP 32 OP_NUMEQUALVERIFY OP_12 OP_PICK OP_SIZE OP_NIP OP_8 OP_NUMEQUALVERIFY OP_5 OP_PICK OP_5 OP_PICK OP_CHECKSIGVERIFY OP_6 OP_PICK OP_8 OP_ROLL OP_CAT OP_8 OP_PICK OP_CAT OP_9 OP_PICK OP_CAT OP_10 OP_ROLL OP_CAT OP_10 OP_PICK OP_CAT OP_11 OP_ROLL OP_CAT OP_6 OP_ROLL OP_SIZE OP_1SUB OP_SPLIT OP_DROP OP_SWAP OP_SHA256 OP_6 OP_ROLL OP_CHECKDATASIGVERIFY 1000 OP_3 OP_PICK OP_8 OP_NUM2BIN OP_8 OP_ROLL OP_BIN2NUM OP_5 OP_ROLL OP_SUB OP_ROT OP_SUB OP_8 OP_NUM2BIN 0x76 0x87 0xa9 0x14 0x17 0x19 0x88 0xac OP_14 OP_ROLL OP_3 OP_SPLIT OP_NIP 2700000 OP_CHECKSEQUENCEVERIFY OP_DROP OP_14 OP_ROLL OP_BIN2NUM OP_2 OP_GREATERTHANOREQUAL OP_VERIFY OP_9 OP_ROLL OP_5 OP_ROLL OP_CAT OP_6 OP_PICK OP_CAT OP_5 OP_PICK OP_CAT OP_SWAP OP_HASH160 OP_CAT OP_6 OP_ROLL OP_CAT OP_7 OP_ROLL OP_4 OP_ROLL OP_CAT OP_6 OP_ROLL OP_CAT OP_5 OP_ROLL OP_CAT OP_4 OP_ROLL OP_CAT OP_4 OP_ROLL OP_CAT OP_3 OP_ROLL OP_CAT OP_ROT OP_CAT OP_CAT OP_HASH256 OP_3 OP_ROLL OP_SHA256 OP_EQUAL OP_NIP OP_NIP OP_ELSE OP_3 OP_ROLL OP_1 OP_NUMEQUAL OP_IF OP_3 OP_PICK OP_HASH160 OP_ROT OP_EQUALVERIFY OP_2SWAP OP_CHECKSIG OP_NIP OP_NIP OP_ELSE OP_FALSE OP_ENDIF OP_ENDIF
# optimisation: opcount ~26%, bytes ~20%
;

# Avg unoptimised opcount: 593 / 9 ≈ 65.89
# Avg unoptimised bytes: 864 / 9 = 96

# Avg optimised opcount: 420 / 9 ≈ 46.67
# Avg optimised bytes: 616 / 9 ≈ 68.44

# Avg opcount optimisation: (56.75 - 39.75) / 56.75 ≈ 29%
# Avg bytes optimisation: (96 - 68.44) / 96 ≈ 29%

# Min optimisation (Mecenas):
#   opcount: 177 -> 131 (~26%)
#   bytes:   250 -> 207 (~20%)

# Max optimisation (P2PKH):
#   opcount: 12 -> 4 (~67%)
#   bytes:   17 -> 4 (~76%)
